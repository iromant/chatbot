package personalBanker.dialog.states;

import personalBanker.dialog.model.DialogContext;
import personalBanker.messageprovider.CategoriesMessage;
import personalBanker.messageprovider.MessageProvider;

public class MainState implements DialogState {
    private final MessageProvider messageProvider;

    public MainState() {
        this.messageProvider = new CategoriesMessage();
    }

    @Override
    public String onEnter() {
        return messageProvider.getMessage("menu.main");
    }

    @Override
    public String userRequest(DialogContext context) {
        String input = context.getUserInput().toLowerCase().trim();

        switch (input) {
            case "/help":
            case "help":
            case "–ø–æ–º–æ—â—å":
            case "—Å–ø—Ä–∞–≤–∫–∞":
                context.setNextState(new HelpState());
                return "üìñ –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–∞–∑–¥–µ–ª —Å–ø—Ä–∞–≤–∫–∏...";

            case "/back":
            case "back":
            case "–Ω–∞–∑–∞–¥":
            case "–≤–æ–∑–≤—Ä–∞—Ç":
                if (context.getUserSession().getPreviousState() != null) {
                    context.setNextState(context.getUserSession().getPreviousState());
                    return "‚Ü©Ô∏è –í–æ–∑–≤—Ä–∞—Ç –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ...";
                } else {
                    return messageProvider.getMessage("error.operation.cancelled");
                }

                // –í –º–µ—Ç–æ–¥–µ userRequest MainState.java –∑–∞–º–µ–Ω–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π:
            case "1":
            case "–¥–æ—Ö–æ–¥—ã":
            case "incomes":
            case "income":
            case "–¥–æ—Ö–æ–¥":
                IncomeState incomeState = (IncomeState) context.getUserSession().getOrCreateState(IncomeState.class);
                context.setNextState(incomeState);
                return "–ü–µ—Ä–µ—Ö–æ–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –¥–æ—Ö–æ–¥–∞–º–∏...";

            case "2":
            case "—Ä–∞—Å—Ö–æ–¥—ã":
            case "expenses":
            case "expense":
            case "—Ä–∞—Å—Ö–æ–¥":
                ExpenseState expenseState = (ExpenseState) context.getUserSession().getOrCreateState(ExpenseState.class);
                context.setNextState(expenseState);
                return "–ü–µ—Ä–µ—Ö–æ–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Ä–∞—Å—Ö–æ–¥–∞–º–∏...";

            case "/start":
            case "start":
            case "—Å—Ç–∞—Ä—Ç":
            case "–Ω–∞—á–∞—Ç—å":
                context.setNextState(new StartState());
                return "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...";

            case "/menu":
            case "menu":
            case "–º–µ–Ω—é":
                return onEnter();

            default:
                return messageProvider.getMessage("error.unknown.command");
        }
    }

    @Override
    public DialogState goNextState(DialogContext context) {
        return context.hasNextState() ? context.getNextState() : this;
    }
}